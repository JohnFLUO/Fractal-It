// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="main,hls_ip_2018_2,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.165000,HLS_SYN_LAT=202,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=450,HLS_SYN_LUT=2012,HLS_VERSION=2018_2}" *)

module main (
        clk,
        reset,
        x,
        y,
        couleur,
        zoom,
        offset_X,
        offset_Y
);


input   clk;
input   reset;
output  [9:0] x;
output  [8:0] y;
output  [11:0] couleur;
input  [31:0] zoom;
input  [31:0] offset_X;
input  [31:0] offset_Y;

wire   [7:0] grp_convergence_fu_102_s_out_din;
wire    grp_convergence_fu_102_s_out_write;
wire   [9:0] grp_convergence_fu_102_out_x;
wire   [8:0] grp_convergence_fu_102_out_y;
wire    grp_dimage_fu_124_counter_read;
wire   [11:0] grp_dimage_fu_124_couleur;
wire   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [7:0] sc_fifo_chn_1_dout;
wire    sc_fifo_chn_1_empty_n;
wire    sc_fifo_chn_1_full_n;

convergence grp_convergence_fu_102(
    .zoom(zoom),
    .offset_X(offset_X),
    .offset_Y(offset_Y),
    .s_out_din(grp_convergence_fu_102_s_out_din),
    .s_out_full_n(sc_fifo_chn_1_full_n),
    .s_out_write(grp_convergence_fu_102_s_out_write),
    .out_x(grp_convergence_fu_102_out_x),
    .out_y(grp_convergence_fu_102_out_y),
    .clk(clk),
    .reset(reset)
);

dimage grp_dimage_fu_124(
    .counter_dout(sc_fifo_chn_1_dout),
    .counter_empty_n(sc_fifo_chn_1_empty_n),
    .counter_read(grp_dimage_fu_124_counter_read),
    .couleur(grp_dimage_fu_124_couleur),
    .clk(clk),
    .reset(reset)
);

fifo_w8_d1_A sc_fifo_chn_1_fifo_U(
    .clk(clk),
    .reset(reset),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_convergence_fu_102_s_out_din),
    .if_full_n(sc_fifo_chn_1_full_n),
    .if_write(grp_convergence_fu_102_s_out_write),
    .if_dout(sc_fifo_chn_1_dout),
    .if_empty_n(sc_fifo_chn_1_empty_n),
    .if_read(grp_dimage_fu_124_counter_read)
);

assign ap_CS_fsm = 2'd0;

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign couleur = grp_dimage_fu_124_couleur;

assign x = grp_convergence_fu_102_out_x;

assign y = grp_convergence_fu_102_out_y;

endmodule //main
