-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity dimage_do_image_cbkb_rom is 
    generic(
             DWIDTH     : integer := 12; 
             AWIDTH     : integer := 6; 
             MEM_SIZE    : integer := 50
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of dimage_do_image_cbkb_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "000000000000", 1 => "000000000010", 2 => "000000000100", 
    3 => "000000000110", 4 => "000000011000", 5 => "000000011001", 
    6 => "000000101011", 7 => "000000111100", 8 => "000001001100", 
    9 => "000001011101", 10 => "000001101101", 11 to 12=> "000101111110", 
    13 => "000110001110", 14 => "001010011110", 15 => "001010101101", 
    16 => "001110111101", 17 => "001111001101", 18 => "010011001100", 
    19 => "010011011100", 20 => "010111011011", 21 => "011011101011", 
    22 => "011011101010", 23 => "011111101001", 24 => "100011101001", 
    25 => "001110111100", 26 => "100111100111", 27 => "101011100111", 
    28 => "101111100110", 29 => "101111100101", 30 => "110011010101", 
    31 => "110111010100", 32 => "110111000100", 33 => "111011000011", 
    34 => "111010110011", 35 => "111010100010", 36 => "111110010010", 
    37 => "111110000001", 38 => "111101110001", 39 => "111001100000", 
    40 => "111001010000", 41 => "110101000000", 42 => "110000110000", 
    43 => "101100100000", 44 => "101000010000", 45 => "100000010000", 
    46 => "011100000000", 47 => "010100000000", 48 => "001000000000", 
    49 => "000000000000" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity dimage_do_image_cbkb is
    generic (
        DataWidth : INTEGER := 12;
        AddressRange : INTEGER := 50;
        AddressWidth : INTEGER := 6);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of dimage_do_image_cbkb is
    component dimage_do_image_cbkb_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    dimage_do_image_cbkb_rom_U :  component dimage_do_image_cbkb_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


