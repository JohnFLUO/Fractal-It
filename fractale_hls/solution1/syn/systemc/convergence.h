// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convergence_HH_
#define _convergence_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convergence_do_convergence.h"

namespace ap_rtl {

struct convergence : public sc_module {
    // Port declarations 10
    sc_in_clk clk;
    sc_in< sc_logic > reset;
    sc_in< sc_lv<32> > zoom;
    sc_in< sc_lv<32> > offset_X;
    sc_in< sc_lv<32> > offset_Y;
    sc_out< sc_lv<8> > s_out_din;
    sc_in< sc_logic > s_out_full_n;
    sc_out< sc_logic > s_out_write;
    sc_out< sc_lv<10> > out_x;
    sc_out< sc_lv<9> > out_y;


    // Module declarations
    convergence(sc_module_name name);
    SC_HAS_PROCESS(convergence);

    ~convergence();

    sc_trace_file* mVcdFile;

    convergence_do_convergence* grp_convergence_do_convergence_fu_76;
    sc_signal< sc_lv<1> > convergence_ssdm_s_load_fu_96_p1;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_lv<8> > grp_convergence_do_convergence_fu_76_s_out_din;
    sc_signal< sc_logic > grp_convergence_do_convergence_fu_76_s_out_write;
    sc_signal< sc_lv<10> > grp_convergence_do_convergence_fu_76_out_x;
    sc_signal< sc_logic > grp_convergence_do_convergence_fu_76_out_x_ap_vld;
    sc_signal< sc_lv<9> > grp_convergence_do_convergence_fu_76_out_y;
    sc_signal< sc_logic > grp_convergence_do_convergence_fu_76_out_y_ap_vld;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_out_x();
    void thread_out_y();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state2();
    void thread_convergence_ssdm_s_load_fu_96_p1();
    void thread_s_out_din();
    void thread_s_out_write();
};

}

using namespace ap_rtl;

#endif
