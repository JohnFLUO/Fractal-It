// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dimage_do_image_HH_
#define _dimage_do_image_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dimage_do_image_cbkb.h"

namespace ap_rtl {

struct dimage_do_image : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<8> > counter_dout;
    sc_in< sc_logic > counter_empty_n;
    sc_out< sc_logic > counter_read;
    sc_out< sc_lv<12> > couleur;
    sc_out< sc_logic > couleur_ap_vld;


    // Module declarations
    dimage_do_image(sc_module_name name);
    SC_HAS_PROCESS(dimage_do_image);

    ~dimage_do_image();

    sc_trace_file* mVcdFile;

    dimage_do_image_cbkb* color_U;
    sc_signal< sc_lv<6> > color_address0;
    sc_signal< sc_logic > color_ce0;
    sc_signal< sc_lv<12> > color_q0;
    sc_signal< sc_logic > counter_blk_n;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > tmp_fu_85_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_color_address0();
    void thread_color_ce0();
    void thread_couleur();
    void thread_couleur_ap_vld();
    void thread_counter_blk_n();
    void thread_counter_read();
    void thread_tmp_fu_85_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
