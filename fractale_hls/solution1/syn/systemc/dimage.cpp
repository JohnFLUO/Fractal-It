// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dimage.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dimage::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dimage::ap_const_logic_0 = sc_dt::Log_0;
const bool dimage::ap_const_boolean_1 = true;

dimage::dimage(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_dimage_do_image_fu_58 = new dimage_do_image("grp_dimage_do_image_fu_58");
    grp_dimage_do_image_fu_58->ap_clk(clk);
    grp_dimage_do_image_fu_58->ap_rst(reset);
    grp_dimage_do_image_fu_58->counter_dout(counter_dout);
    grp_dimage_do_image_fu_58->counter_empty_n(counter_empty_n);
    grp_dimage_do_image_fu_58->counter_read(grp_dimage_do_image_fu_58_counter_read);
    grp_dimage_do_image_fu_58->couleur(grp_dimage_do_image_fu_58_couleur);
    grp_dimage_do_image_fu_58->couleur_ap_vld(grp_dimage_do_image_fu_58_couleur_ap_vld);

    SC_METHOD(thread_couleur);
    dont_initialize();
    sensitive << ( clk.pos() );

    SC_METHOD(thread_counter_read);
    sensitive << ( grp_dimage_do_image_fu_58_counter_read );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dimage_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, clk, "(port)clk");
    sc_trace(mVcdFile, reset, "(port)reset");
    sc_trace(mVcdFile, counter_dout, "(port)counter_dout");
    sc_trace(mVcdFile, counter_empty_n, "(port)counter_empty_n");
    sc_trace(mVcdFile, counter_read, "(port)counter_read");
    sc_trace(mVcdFile, couleur, "(port)couleur");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, grp_dimage_do_image_fu_58_counter_read, "grp_dimage_do_image_fu_58_counter_read");
    sc_trace(mVcdFile, grp_dimage_do_image_fu_58_couleur, "grp_dimage_do_image_fu_58_couleur");
    sc_trace(mVcdFile, grp_dimage_do_image_fu_58_couleur_ap_vld, "grp_dimage_do_image_fu_58_couleur_ap_vld");
#endif

    }
}

dimage::~dimage() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_dimage_do_image_fu_58;
}

void dimage::thread_couleur() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dimage_do_image_fu_58_couleur_ap_vld.read())) {
        couleur = grp_dimage_do_image_fu_58_couleur.read();
    }
}

void dimage::thread_counter_read() {
    counter_read = grp_dimage_do_image_fu_58_counter_read.read();
}

}

